@model TrashCollection.Models.Customer

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";
}

<script>
function initMap() {
    const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 15,
        center: { lat: -34.397, lng: 150.644 }
    });
    const geocoder = new google.maps.Geocoder();
    var address = '@Html.Raw(Model.Address)';
    geocoder.geocode({'address': address}, function (results, status)
    {
        if (status === 'OK')
        {
        var marker = new google.maps.Marker({
            map: map,
            position: results[0].geometry.location,
            center: {
                lat: 12.7826,
                lng: 105.0282
            },
        });
            var latLng = marker.getPosition();
            map.setCenter(latLng);
        }
        else
        {
            alert('Geocode was not successful for the following reason: ' + status);
        }

    });
        
    document.getElementById("submit").addEventListener("click", () => {
        geocodeAddress(geocoder, map);
    });
}

function geocodeAddress(geocoder, resultsMap) {
    const address = document.getElementById("address").value;
    geocoder.geocode({ address: address }, (results, status) => {
        if (status === "OK") {
            resultsMap.setCenter(results[0].geometry.location);
            new google.maps.Marker({
                map: resultsMap,
                position: results[0].geometry.location
            });
        } else {
            alert("Geocode was not successful for the following reason: " + status);
        }
    });
}
</script>


<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
    * element that contains the map. */
    #map {
        height: 100%;
        width: auto;
    }

    /* Optional: Makes the sample page fill the window. */
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #floating-panel {
        position: absolute;
        top: 10px;
        left: 25%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: "Roboto", "sans-serif";
        line-height: 30px;
        padding-left: 10px;
    }
</style>

<h1>Customer Details</h1>
<div class="container">
    <div class="row">
        <div class="col-sm">
            <div class="card">
                <div class="card-header">
                    <h5>Customer Information</h5>
                </div>
                <div class="card-body">
                    <div>
                        <h4>Details</h4>
                        <hr />
                        <dl class="row">
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.Name)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Name)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.Address)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.Address)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.City)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.City)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.State)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.State)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.ZipCode)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.ZipCode)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.PickupDay)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.PickupDay)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.MonthBalance)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.MonthBalance)
                            </dd>
                            <dt class="col-sm-5">
                                @Html.DisplayNameFor(model => model.LastPickup)
                            </dt>
                            <dd class="col-sm-10">
                                @Html.DisplayFor(model => model.LastPickup)
                            </dd>
                        </dl>
                    </div>
                    <div>
                        <a asp-action="AllCustomers">Back to List</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm">
            <div class="card">
                <div class="card-header">
                    <h5>Customer Address</h5>
                </div>
                <div class="card-body" onload="initMap()">
                    <body onload="initialize()">
                        <div id="map" style="width: auto; height: 500px;"></div>
                        <div>
                        </div>
                    </body>
                </div>
            </div>
        </div>
    </div>
</div>

